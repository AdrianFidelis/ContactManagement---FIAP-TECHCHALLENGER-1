// <auto-generated />
using ContactManagement.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ContactManagement.Infrastructure.Migrations
{
    [DbContext(typeof(ContactDbContext))]
    [Migration("20250103193318_AddPhoneToContact")]
    partial class AddPhoneToContact
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ContactManagement.Domain.Entities.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("ContactManagement.Domain.Entities.Contact", b =>
                {
                    b.OwnsOne("ContactManagement.Domain.Entities.Phone", "Phone", b1 =>
                        {
                            b1.Property<int>("ContactId")
                                .HasColumnType("int");

                            b1.Property<int>("CountryCode")
                                .HasColumnType("int")
                                .HasColumnName("CountryCode");

                            b1.Property<int>("NumberPhone")
                                .HasColumnType("int")
                                .HasColumnName("NumberPhone");

                            b1.Property<int>("RegionalCode")
                                .HasColumnType("int")
                                .HasColumnName("RegionalCode");

                            b1.HasKey("ContactId");

                            b1.ToTable("Contacts");

                            b1.WithOwner()
                                .HasForeignKey("ContactId");
                        });

                    b.Navigation("Phone")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
